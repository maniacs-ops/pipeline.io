{
  "paragraphs": [
    {
      "text": "%md\n## Locality Sensitive Hashing (LSH)\n* Hash items into multiple buckets\n* Similar items will hash to overlapping buckets over many different hash functions\n\n![Locality Sensitive Hashing](http://advancedspark.com/img/locality-sensitive-hashing.png) \n\n### Intuition: _Avoid cartesian_ and compare only items within each bucket",
      "dateUpdated": "Jun 17, 2016 2:02:10 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1454564335986_1155761249",
      "id": "20160204-053855_817826416",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eLocality Sensitive Hashing (LSH)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHash items into multiple buckets\u003c/li\u003e\n\u003cli\u003eSimilar items will hash to overlapping buckets over many different hash functions\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src\u003d\"http://advancedspark.com/img/locality-sensitive-hashing.png\" alt\u003d\"Locality Sensitive Hashing\" /\u003e\u003c/p\u003e\n\u003ch3\u003eIntuition: \u003cem\u003eAvoid cartesian\u003c/em\u003e and compare only items within each bucket\u003c/h3\u003e\n"
      },
      "dateCreated": "Feb 4, 2016 5:38:55 AM",
      "dateStarted": "May 16, 2016 1:48:45 AM",
      "dateFinished": "May 16, 2016 1:48:45 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load dataset including tags",
      "text": "val itemsDF \u003d sqlContext.read.format(\"com.databricks.spark.csv\")\n  .option(\"header\", \"true\")\n  .option(\"inferSchema\", \"true\")\n  .load(\"file:/root/pipeline/datasets/movielens/ml-latest/movies-sm.csv\")\n  .toDF(\"id\", \"title\", \"tags\")\n  .cache()\n  \nz.show(itemsDF)",
      "dateUpdated": "Apr 4, 2016 4:39:27 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452399782070_1501936568",
      "id": "20160110-042302_1441428409",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\ttitle\ttags\n1\tToy Story (1995)\tAdventure|Animation|Children|Comedy|Fantasy\n2\tJumanji (1995)\tAdventure|Children|Fantasy\n3\tGrumpier Old Men (1995)\tComedy|Romance\n4\tWaiting to Exhale (1995)\tComedy|Drama|Romance\n5\tFather of the Bride Part II (1995)\tComedy\n6\tHeat (1995)\tAction|Crime|Thriller\n7\tSabrina (1995)\tComedy|Romance\n8\tTom and Huck (1995)\tAdventure|Children\n9\tSudden Death (1995)\tAction\n10\tGoldenEye (1995)\tAction|Adventure|Thriller\n"
      },
      "dateCreated": "Jan 10, 2016 4:23:02 AM",
      "dateStarted": "Apr 4, 2016 4:39:29 AM",
      "dateFinished": "Apr 4, 2016 4:39:45 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Convert CSV-based DataFrame into MinHashTaggedItems",
      "text": "import org.apache.spark.sql.Row\nimport com.advancedspark.ml.MinHashTaggedItem\nimport com.twitter.algebird.{ MinHasher, MinHasher32, MinHashSignature }\n\nval numHashes \u003d 5\nval minApproxLSHSimilarityThreshold \u003d 0.5\nval numBands \u003d MinHasher.pickBands(minApproxLSHSimilarityThreshold, numHashes)\n\nval minHasher \u003d new MinHasher32(numHashes, numBands)\n\nval itemsRDD \u003d itemsDF.select($\"id\", $\"title\", $\"tags\").map(row \u003d\u003e {\n  val id \u003d row.getInt(0)\n  val title \u003d row.getString(1)\n  val tags \u003d row.getString(2).trim.split(\"\\\\|\")\n  val tagSignatures \u003d tags.map(tag \u003d\u003e minHasher.init(tag))\n  val combinedTagSignature \u003d minHasher.sum(tagSignatures)\n  \n  MinHashTaggedItem(id, title, tags, combinedTagSignature)\n}).cache()\n\nval itemsCount \u003d itemsRDD.count()",
      "dateUpdated": "Apr 4, 2016 4:39:30 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "items",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "items",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452399782070_1501936568",
      "id": "20160110-042302_1262573744",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.sql.Row\nimport com.advancedspark.ml.MinHashTaggedItem\nimport com.twitter.algebird.{MinHasher, MinHasher32, MinHashSignature}\nnumHashes: Int \u003d 5\nminApproxLSHSimilarityThreshold: Double \u003d 0.5\nnumBands: Int \u003d 4\nminHasher: com.twitter.algebird.MinHasher32 \u003d com.twitter.algebird.MinHasher32@6d799910\nitemsRDD: org.apache.spark.rdd.RDD[com.advancedspark.ml.MinHashTaggedItem] \u003d MapPartitionsRDD[971] at map at \u003cconsole\u003e:108\nitemsCount: Long \u003d 10\n"
      },
      "dateCreated": "Jan 10, 2016 4:23:02 AM",
      "dateStarted": "Apr 4, 2016 4:39:31 AM",
      "dateFinished": "Apr 4, 2016 4:39:46 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Distribution Of Tags Within Dataset",
      "text": "val tagsCountRDD \u003d itemsRDD.flatMap(item \u003d\u003e item.tags).map(tag \u003d\u003e (tag,1)).reduceByKey(_ + _)\nz.show(tagsCountRDD.toDF(\"tag\", \"count\"))",
      "dateUpdated": "May 11, 2016 5:50:35 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "lineChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "tag",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "tag",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1454629332686_-1064284298",
      "id": "20160204-234212_1227348797",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "tag\tcount\nFantasy\t2\nCrime\t1\nAnimation\t1\nThriller\t2\nAdventure\t4\nAction\t3\nChildren\t3\nComedy\t5\nRomance\t3\nDrama\t1\n"
      },
      "dateCreated": "Feb 4, 2016 11:42:12 PM",
      "dateStarted": "Apr 4, 2016 4:39:45 AM",
      "dateFinished": "Apr 4, 2016 4:39:47 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Group the items into their respective bucket",
      "text": "val bucketItemsRDD \u003d itemsRDD.flatMap(item \u003d\u003e {\n  val buckets \u003d minHasher.buckets(item.combinedTagSignature)\n  buckets.map(bucket \u003d\u003e \n    (bucket, Seq(item)) \n  )\n}).reduceByKey(_ ++ _)\n.cache()\n\nval bucketSizes \u003d bucketItemsRDD.map(bucketItems \u003d\u003e bucketItems._2.size).collect()\nval bucketCount \u003d bucketSizes.size",
      "dateUpdated": "Apr 4, 2016 4:39:32 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452464653120_1075838869",
      "id": "20160110-222413_543198092",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "bucketItemsRDD: org.apache.spark.rdd.RDD[(Long, Seq[com.advancedspark.ml.MinHashTaggedItem])] \u003d ShuffledRDD[980] at reduceByKey at \u003cconsole\u003e:130\nbucketSizes: Array[Int] \u003d Array(2, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 2, 1, 2, 1, 3, 2, 3, 1, 2, 2, 4, 1)\nbucketCount: Int \u003d 28\n"
      },
      "dateCreated": "Jan 10, 2016 10:24:13 PM",
      "dateStarted": "Apr 4, 2016 4:39:47 AM",
      "dateFinished": "Apr 4, 2016 4:39:48 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "All Pairs Similarity Comparison within each bucket (Much Smaller Cartesian)",
      "text": "val similarItemPairIdsAboveThresholdRDD \u003d bucketItemsRDD.flatMap(bucketItems \u003d\u003e {\n  val allItemsWithinBucket \u003d bucketItems._2\n\n  val allItemPairsWithinBucket \u003d\n    // Cartesian product of a MUCH smaller Set of items (per bucket)\n    for { \n        item1 \u003c- allItemsWithinBucket\n        item2 \u003c- allItemsWithinBucket\n        if (item1.id \u003c item2.id) // Preserve just a triangle to avoid extra work\n    } yield (item1, item2)\n\n  val similarItemPairIdsAboveThresholdWithinBucket \u003d allItemPairsWithinBucket\n    // Calculate LSH similarity for all pairs within this bucket\n    .map(itemPair \u003d\u003e \n      (itemPair._1.id, itemPair._2.id, \n        minHasher.similarity(itemPair._1.combinedTagSignature, itemPair._2.combinedTagSignature)))\n    // Keep only pairs above the given threshold\n    .filter(_._3 \u003e\u003d minApproxLSHSimilarityThreshold) \n    \n  similarItemPairIdsAboveThresholdWithinBucket\n}).cache()\n\nval similarItemPairIdsAboveThresholdCount \u003d similarItemPairIdsAboveThresholdRDD.count()",
      "dateUpdated": "Apr 4, 2016 4:39:32 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452464592186_-1269129056",
      "id": "20160110-222312_1987101632",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "similarItemPairIdsAboveThresholdRDD: org.apache.spark.rdd.RDD[(Long, Long, Double)] \u003d MapPartitionsRDD[982] at flatMap at \u003cconsole\u003e:127\nsimilarItemPairIdsAboveThresholdCount: Long \u003d 20\n"
      },
      "dateCreated": "Jan 10, 2016 10:23:12 PM",
      "dateStarted": "Apr 4, 2016 4:39:47 AM",
      "dateFinished": "Apr 4, 2016 4:39:48 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Cluster Items By Similarity using Power Iteration Clustering",
      "text": "// http://spark.apache.org/docs/latest/mllib-clustering.html#power-iteration-clustering-pic\nimport org.apache.spark.mllib.clustering.{PowerIterationClustering, PowerIterationClusteringModel}\n\nval clustering \u003d new PowerIterationClustering().setK(5).setMaxIterations(10)\n\nval clusteringModel \u003d clustering.run(similarItemPairIdsAboveThresholdRDD)",
      "dateUpdated": "Apr 4, 2016 4:39:33 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452399782070_1501936568",
      "id": "20160110-042302_966856494",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.mllib.clustering.{PowerIterationClustering, PowerIterationClusteringModel}\nclustering: org.apache.spark.mllib.clustering.PowerIterationClustering \u003d org.apache.spark.mllib.clustering.PowerIterationClustering@649c0ff5\nclusteringModel: org.apache.spark.mllib.clustering.PowerIterationClusteringModel \u003d org.apache.spark.mllib.clustering.PowerIterationClusteringModel@c3f498f\n"
      },
      "dateCreated": "Jan 10, 2016 4:23:02 AM",
      "dateStarted": "Apr 4, 2016 4:39:48 AM",
      "dateFinished": "Apr 4, 2016 4:39:50 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Enrich the cluster assignments",
      "text": "val clusterAssignmentsRDD \u003d clusteringModel.assignments.map { assignment \u003d\u003e\n  (assignment.id, assignment.cluster)\n}\n\nval enrichedClusterAssignmentsDF \u003d clusterAssignmentsRDD.toDF(\"itemId\", \"clusterId\")\n  .join(itemsDF, $\"itemId\" \u003d\u003d\u003d $\"id\")\n  .select($\"clusterId\", $\"itemId\", $\"title\", $\"tags\")\n  .sort($\"clusterId\" desc)\n  \nz.show(enrichedClusterAssignmentsDF.select($\"clusterId\", $\"title\", $\"tags\"))",
      "dateUpdated": "Apr 4, 2016 4:39:36 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452399782070_1501936568",
      "id": "20160110-042302_674258510",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "clusterId\ttitle\ttags\n4\tHeat (1995)\tAction|Crime|Thriller\n3\tGrumpier Old Men (1995)\tComedy|Romance\n3\tWaiting to Exhale (1995)\tComedy|Drama|Romance\n3\tSabrina (1995)\tComedy|Romance\n2\tGoldenEye (1995)\tAction|Adventure|Thriller\n1\tTom and Huck (1995)\tAdventure|Children\n1\tToy Story (1995)\tAdventure|Animation|Children|Comedy|Fantasy\n0\tJumanji (1995)\tAdventure|Children|Fantasy\n"
      },
      "dateCreated": "Jan 10, 2016 4:23:02 AM",
      "dateStarted": "Apr 4, 2016 4:39:48 AM",
      "dateFinished": "Apr 4, 2016 4:39:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Show cluster Distributions",
      "text": "val clusterDistributionDF \u003d enrichedClusterAssignmentsDF\n  .select($\"clusterId\", $\"itemId\", $\"tags\")\n  .groupBy($\"clusterId\", $\"tags\")\n  .agg(count($\"itemId\"))\n  .sort($\"clusterId\" desc)\n\nz.show(clusterDistributionDF)",
      "dateUpdated": "Apr 4, 2016 4:39:36 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count(itemId)",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "clusterId",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452399782070_1501936568",
      "id": "20160110-042302_831247746",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "clusterId\ttags\tcount(itemId)\n4\tAction|Crime|Thriller\t1\n3\tComedy|Drama|Romance\t1\n3\tComedy|Romance\t2\n2\tAction|Adventure|Thriller\t1\n1\tAdventure|Children\t1\n1\tAdventure|Animation|Children|Comedy|Fantasy\t1\n0\tAdventure|Children|Fantasy\t1\n"
      },
      "dateCreated": "Jan 10, 2016 4:23:02 AM",
      "dateStarted": "Apr 4, 2016 4:39:50 AM",
      "dateFinished": "Apr 4, 2016 4:39:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Apr 4, 2016 4:39:36 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1452399782071_1501551819",
      "id": "20160110-042302_1914776395",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jan 10, 2016 4:23:02 AM",
      "dateStarted": "Apr 4, 2016 4:39:51 AM",
      "dateFinished": "Apr 4, 2016 4:39:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Clustering/03: Approx Tag Similarity (LSH) + Power Iteration Clustering",
  "id": "2B8GP7GBZ",
  "angularObjects": {
    "2ARR8UZDJ": [],
    "2AS9P7JSA": [],
    "2AR33ZMZJ": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}